apiVersion: v1
kind: Namespace
metadata:
  name: aks-proxy
---
apiVersion: v1
kind: Secret
metadata:
  name: net-alanblythe-demo-tls-secret
  namespace: aks-proxy
data:
  tls.crt:  __net-alanblythe-demo-tls-crt__
  tls.key:  __net-alanblythe-demo-tls-key__
---
apiVersion: v1
kind: Service
metadata:
  name: net-alanblythe-demo
  namespace: aks-proxy
  annotations:
    ingress.appscode.com/use-dns-resolver: "true"
    ingress.appscode.com/dns-resolver-nameservers: '["8.8.8.8:53", "8.8.4.4:53"]'
    ingress.appscode.com/backend-tls: ssl verify none
spec:
  type: ExternalName
  externalName: aksproxydemo20190312041303.azurewebsites.net
---
apiVersion: voyager.appscode.com/v1beta1
kind: Ingress
metadata:
  name: net-alanblythe-demo-ingress
  namespace: aks-proxy
  annotations:
    ingress.appscode.com/keep-source-ip: "true"
    ingress.appscode.com/type: LoadBalancer
spec:
  tls:
  - secretName: net-alanblythe-demo-tls-secret
    hosts:
    - demo.alanblythe.net
  rules:
  - host: demo.alanblythe.net
    http:
      paths:
      - backend:
          serviceName: net-alanblythe-demo
          servicePort: "443"
          headerRules:
          - Host demo.alanblythe.net
          backendRules:
          - 'acl response-is-redirect res.hdr(Location) -m found'
          - 'rspirep ^Location:\ (http|https)://(aksproxydemo20190312041303\.azurewebsites\.net)(.*) Location:\ https://demo.alanblythe.net\3 if response-is-redirect'
---
apiVersion: voyager.appscode.com/v1beta1
kind: Ingress
metadata:
  name: stats-ingress
  namespace: aks-proxy
  annotations:
    ingress.appscode.com/type: 'Internal'
    ingress.appscode.com/stats: 'true'
    ingress.appscode.com/stats-port: "56789"
spec:
  rules:
  - http:
      paths:
      - path: /
        backend:
          serviceName: web
          servicePort: 80      
      